[build-system]
requires = [
    "setuptools>=42",
    "wheel",
    "cx-Freeze>=6.15.4",
    "customtkinter>=5.2.0",
    "pandas>=1.3.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0",
    "tensorflow>=2.12.0",
    "joblib>=1.2.0"
]
build-backend = "setuptools.build_meta"

[project]
name = "loan_eligibility_checker"
version = "1.0.0"
description = "Loan Eligibility Prediction Application"
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "customtkinter>=5.2.0",
    "pandas>=1.3.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0",
    "tensorflow>=2.12.0",
    "joblib>=1.2.0"
]

[tool.cxfreeze]
# Use options that work correctly on multiple platforms
packages = [
    "os",
    "customtkinter",
    "pandas",
    "numpy",
    "numpy.core._multiarray_umath",
    "numpy.random",
    "sklearn",
    "tensorflow",
    "keras",
    "joblib",
    "src"
]
includes = ["tensorflow.python.ops.array_ops",
            "numpy.core._multiarray_umath"]
excludes = ["tkinter.test"]
optimize = 1
include_msvcr = true
zip_include_packages = ["*"]
zip_exclude_packages = []
bin_path_includes = ["numpy"]
bin_includes = ["numpy.core._multiarray_umath.cp310-win_amd64.pyd"]

[[tool.cxfreeze.executables]]
script = "src/gui/gui_5_0.py"
target_name = "LoanEligibilityChecker"
base = "Win32GUI"  # Only applies to Windows
icon = ""

[tool.cxfreeze.options]
# Additional options to include needed files
include_files = [
    ["src/preprocessing/training_columns.csv", "src/preprocessing/training_columns.csv"],
    ["src/preprocessing/scaler.joblib", "src/preprocessing/scaler.joblib"],
    ["src/model/lenn1.3.keras", "src/model/lenn1.3.keras"]
]

include_msvcr = true

[project.scripts]
loan-checker = "src.gui.gui_5_0:main"  # If the main() function exists
